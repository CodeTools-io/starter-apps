{"files":[{"content":"import React, { lazy, Suspense } from 'react';\nimport { Box, Heading, Paragraph } from 'grommet';\nimport useDashboard from './useDashboard';\n\nfunction DashboardWidget({ type, ...props }) {\n  const Component = lazy(() => import(`./widgets/${type}Widget`));\n  const fallback = <Paragraph>Loadingâ€¦</Paragraph>;\n\n  return (\n    <Suspense fallback={fallback}>\n      <Box flex>\n        <Component {...props} />\n      </Box>\n    </Suspense>\n  );\n}\n\nfunction DashboardSection({ id, title, widgets }) {\n  return (\n    <Box flex={false} gap=\"medium\">\n      {title && (\n        <Heading level={3} margin=\"none\">\n          {title}\n        </Heading>\n      )}\n      <Box direction=\"row\" gap=\"medium\" justify=\"stretch\">\n        {widgets?.map((widget) => {\n          return <DashboardWidget key={widget?.id} {...widget} />;\n        })}\n      </Box>\n    </Box>\n  );\n}\nexport default function Dashboard() {\n  const { widgetsBySection, sections } = useDashboard();\n  return (\n    <Box className=\"Dashboard\" pad=\"medium\" gap=\"large\">\n      {sections.map((section) => {\n        return (\n          <DashboardSection\n            key={section?.id}\n            {...section}\n            widgets={widgetsBySection[section?.id]}\n          />\n        );\n      })}\n    </Box>\n  );\n}\n","filepath":"Dashboard.js","filename":"Dashboard.js","directory":".","context":"Dashboard"},{"content":"export { default } from './Dashboard'\n","filepath":"index.js","filename":"index.js","directory":".","context":"Dashboard"},{"content":"import { useMemo, useState } from 'react';\nimport { groupBy } from 'lodash';\nimport * as config from './config';\n\nexport default function useDashboard() {\n  const [widgets] = useState(config?.widgets);\n  const [sections] = useState(config?.sections);\n  const widgetsBySection = useMemo(() => {\n    return groupBy(widgets, 'section');\n  }, [widgets]);\n  const dashboard = useMemo(() => {\n    return { widgets, sections, widgetsBySection };\n  }, [widgets, sections, widgetsBySection]);\n\n  return dashboard;\n}\n","filepath":"useDashboard.js","filename":"useDashboard.js","directory":".","context":"Dashboard"},{"content":"import { Cart, Chat, Mail, Tasks } from 'grommet-icons';\n\nexport const widgets = [\n  {\n    id: 'dashboard-progress-list-1',\n    type: 'ProgressList',\n    title: 'Goals',\n    description: 'Company financial goals',\n    data: [\n      { value: 25, label: 'Month' },\n      { value: 75, label: 'Quarter' },\n      { value: 50, label: 'Year' },\n    ],\n    section: 'section-1',\n  },\n  {\n    id: 'dashboard-table-1',\n    type: 'Table',\n    title: 'New Users',\n    description: 'Registered within the last 15 days',\n    columns: ['First Name', 'Last Name', ' Email'],\n    data: [\n      ['Jane', 'Doe', 'jdoe@example.com'],\n      ['Bill', 'Smith', 'bsmith@example.com'],\n      ['John', 'Doe', 'jdoe@example.com'],\n      ['Suzy', 'Q', 'suzyq@example.com'],\n    ],\n    section: 'section-1',\n  },\n  {\n    id: 'dashboard-count-1',\n    type: 'Count',\n    label: 'Unread Email',\n    value: 7,\n    icon: Mail,\n    color: 'purple',\n    section: 'section-2',\n  },\n  {\n    id: 'dashboard-count-2',\n    type: 'Count',\n    label: 'Unread Messages',\n    value: 3,\n    icon: Chat,\n    color: 'blue',\n    section: 'section-2',\n  },\n  {\n    id: 'dashboard-count-3',\n    type: 'Count',\n    label: 'Orders',\n    value: 3,\n    icon: Cart,\n    color: 'green',\n    section: 'section-2',\n  },\n  {\n    id: 'dashboard-progress-1',\n    type: 'Progress',\n    title: 'Sprint Completion',\n    icon: Tasks,\n    data: { value: 66, label: 'Sprint 64' },\n    section: 'section-3',\n  },\n  {\n    id: 'dashboard-map-1',\n    section: 'section-4',\n    type: 'Map',\n    title: 'Traffic',\n    description: 'Location of active users',\n    data: {\n      continents: [\n        {\n          name: 'North America',\n          color: 'brand-alt-1',\n        },\n        {\n          name: 'Africa',\n          color: 'brand-alt-1',\n        },\n        {\n          name: 'Australia',\n          color: 'brand-alt-1',\n        },\n      ],\n      places: [\n        {\n          name: 'Washington, D.C.',\n          location: [38.898748, -77.037684],\n          color: 'brand-2',\n        },\n        {\n          name: 'Cape Town',\n          location: [33.9249, 18.4241],\n          color: 'brand-2',\n        },\n        {\n          name: 'Sydney',\n          location: [-33.8830555556, 151.216666667],\n          color: 'brand-2',\n        },\n      ],\n    },\n  },\n];\n\nexport const sections = [\n  {\n    id: 'section-1',\n    title: 'Status',\n  },\n  {\n    id: 'section-2',\n    title: 'Notifications',\n  },\n  {\n    id: 'section-3',\n    title: 'Progress',\n  },\n  {\n    id: 'section-4',\n    title: 'Analytics',\n  },\n];\n","filepath":"config/config.js","filename":"config.js","directory":"config","context":"Dashboard"},{"content":"export * from './config';\n","filepath":"config/index.js","filename":"index.js","directory":"config","context":"Dashboard"},{"content":"const { PUBLIC_URL } = process.env;\n\nexport const user1 = {\n  id: 'user-1',\n  username: 'johnd',\n  firstName: 'John',\n  lastName: 'D',\n  profile: `${PUBLIC_URL}/placeholder/img/avatars/guy1.jpg`,\n  company: 'That Company Inc.',\n\n  email: 'johnd@example.com',\n  mobile: '(555) 555-1234',\n  home: '(555) 555-5678',\n  work: '(555) 555-1000',\n};\n\nexport const user2 = {\n  id: 'user-2',\n  username: 'janed',\n  firstName: 'Jane',\n  lastName: 'D',\n  profile: `${PUBLIC_URL}/placeholder/img/avatars/girl1.jpg`,\n  company: 'Some Company Inc.',\n\n  email: 'janed@example.com',\n  mobile: '(555) 555-1234',\n  home: '(555) 555-5678',\n  work: '(555) 555-1000',\n};\n\nexport const user3 = {\n  id: 'user-3',\n  username: 'bills',\n  firstName: 'Bill',\n  lastName: 'S',\n  profile: `${PUBLIC_URL}/placeholder/img/avatars/guy2.jpg`,\n  company: 'Another Company Inc.',\n\n  email: 'bills@example.com',\n  mobile: '(555) 555-1234',\n  home: '(555) 555-5678',\n  work: '(555) 555-1000',\n};\n\nexport const user4 = {\n  id: 'user-4',\n  username: 'suzyq',\n  firstName: 'Suzy',\n  lastName: 'Q',\n  profile: `${PUBLIC_URL}/placeholder/img/avatars/girl2.jpg`,\n  company: 'Not A Company Inc.',\n\n  email: 'suzyq@example.com',\n  mobile: '(555) 555-1234',\n  home: '(555) 555-5678',\n  work: '(555) 555-1000',\n};\n\nexport const user5 = {\n  id: 'user-5',\n  username: 'mikes',\n  firstName: 'Mike',\n  lastName: 'S',\n  profile: `${PUBLIC_URL}/placeholder/img/avatars/guy3.jpg`,\n  company: 'Same Company Inc.',\n\n  email: 'mikes@example.com',\n  mobile: '(555) 555-1234',\n  home: '(555) 555-5678',\n  work: '(555) 555-1000',\n};\n\nexport const user6 = {\n  id: 'user-6',\n  username: 'saraht',\n  firstName: 'Sarah',\n  lastName: 'T',\n  profile: `${PUBLIC_URL}/placeholder/img/avatars/girl3.jpg`,\n  company: 'Should Be A Company Inc.',\n\n  email: 'saraht@example.com',\n  mobile: '(555) 555-1234',\n  home: '(555) 555-5678',\n  work: '(555) 555-1000',\n};\n\nexport const user7 = {\n  id: 'user-7',\n  username: 'markw',\n  firstName: 'Mark',\n  lastName: 'W',\n  profile: `${PUBLIC_URL}/placeholder/img/avatars/guy4.jpg`,\n  company: 'Was A Company Inc.',\n\n  email: 'markw@example.com',\n  mobile: '(555) 555-1234',\n  home: '(555) 555-5678',\n  work: '(555) 555-1000',\n};\n","filepath":"config/users.js","filename":"users.js","directory":"config","context":"Dashboard"},{"content":"import React from 'react';\nimport { Box, Card, Text } from 'grommet';\nimport useContrast from './hooks/useContrast';\nimport useDarken from './hooks/useDarken';\n\nfunction Icon({ icon, color }) {\n  const Component = icon;\n  return (\n    <Box>\n      <Component color={color} />\n    </Box>\n  );\n}\nexport default function CountWidget({\n  id,\n  label,\n  value,\n  icon,\n  color,\n  ...props\n}) {\n  const contrast = useContrast(color);\n  const offsetColor = useDarken(color, 20);\n\n  return (\n    <Card\n      className=\"CountWidget\"\n      direction=\"row\"\n      background={color}\n      elevation=\"none\"\n      border\n      {...props}\n    >\n      {icon && (\n        <Box justify=\"center\" background={offsetColor} pad=\"medium\">\n          <Icon icon={icon} color={contrast} />\n        </Box>\n      )}\n      <Box gap=\"xsmall\" pad=\"medium\">\n        <Text margin=\"none\" color={contrast} size=\"xlarge\" weight=\"bold\">\n          {value}\n        </Text>\n        {label && (\n          <Text margin=\"none\" color={contrast}>\n            {label}\n          </Text>\n        )}\n      </Box>\n    </Card>\n  );\n}\n","filepath":"widgets/CountWidget.js","filename":"CountWidget.js","directory":"widgets","context":"Dashboard"},{"content":"import React from 'react';\nimport { Card, Heading, Paragraph, WorldMap } from 'grommet';\nfunction Map({ continents = [], places = [] }) {\n  return (\n    <WorldMap color=\"light-6\" continents={continents} places={places} fill />\n  );\n}\nexport default function MapWidget({ title, description, data, ...props }) {\n  return (\n    <Card\n      background=\"white\"\n      pad=\"medium\"\n      gap=\"medium\"\n      elevation=\"none\"\n      border\n      {...props}\n    >\n      {title && (\n        <Heading level=\"4\" margin=\"none\">\n          {title}\n        </Heading>\n      )}\n      <Map {...data} />\n      {description && (\n        <Paragraph margin=\"none\" color=\"dark-6\">\n          {description}\n        </Paragraph>\n      )}\n    </Card>\n  );\n}\n","filepath":"widgets/MapWidget.js","filename":"MapWidget.js","directory":"widgets","context":"Dashboard"},{"content":"import React from 'react';\nimport { Box, Card, Heading, Meter, Paragraph } from 'grommet';\n\nfunction Progress({ value, color, label }) {\n  return (\n    <Box gap=\"xsmall\">\n      {label && (\n        <Heading level={5} margin=\"none\">\n          {label}\n        </Heading>\n      )}\n\n      <Meter\n        aria-label=\"meter\"\n        type=\"bar\"\n        values={[{ value, color, label }]}\n        width=\"100%\"\n      />\n    </Box>\n  );\n}\nexport default function ProgressListWidget({\n  id,\n  title,\n  data,\n  description,\n  ...props\n}) {\n  return (\n    <Card\n      background=\"white\"\n      pad=\"medium\"\n      gap=\"medium\"\n      elevation=\"none\"\n      border\n      {...props}\n    >\n      {title && (\n        <Heading level=\"4\" margin=\"none\">\n          {title}\n        </Heading>\n      )}\n\n      <Box gap=\"medium\">\n        {data?.map((datum, index) => {\n          return <Progress key={`plw-${id}-${index}`} {...datum} />;\n        })}\n      </Box>\n\n      {description && (\n        <Paragraph margin=\"none\" color=\"dark-6\">\n          {description}\n        </Paragraph>\n      )}\n    </Card>\n  );\n}\n","filepath":"widgets/ProgressListWidget.js","filename":"ProgressListWidget.js","directory":"widgets","context":"Dashboard"},{"content":"import React from 'react';\nimport { Box, Card, Heading, Meter, Paragraph } from 'grommet';\n\nfunction Progress({ value, color, label }) {\n  return (\n    <Box gap=\"xsmall\">\n      {label && (\n        <Paragraph margin=\"none\" color=\"dark-6\">\n          {label}\n        </Paragraph>\n      )}\n\n      <Meter\n        aria-label=\"meter\"\n        type=\"bar\"\n        values={[{ value, color, label }]}\n        width=\"100%\"\n      />\n    </Box>\n  );\n}\n\nexport default function ProgressWidget({ title, icon, data, ...props }) {\n  const Icon = icon ? icon : null;\n  return (\n    <Card\n      background=\"white\"\n      pad=\"medium\"\n      gap=\"medium\"\n      direction=\"row\"\n      elevation=\"none\"\n      border\n      {...props}\n    >\n      <Box gap=\"medium\" flex>\n        {title && (\n          <Heading level=\"4\" margin=\"none\">\n            {title}\n          </Heading>\n        )}\n        <Progress {...data} />\n      </Box>\n      {Icon && (\n        <Box>\n          <Icon />\n        </Box>\n      )}\n    </Card>\n  );\n}\n","filepath":"widgets/ProgressWidget.js","filename":"ProgressWidget.js","directory":"widgets","context":"Dashboard"},{"content":"import React from 'react';\nimport {\n  Box,\n  Card,\n  Heading,\n  Paragraph,\n  Table,\n  TableHeader,\n  TableBody,\n  TableRow,\n  TableCell,\n} from 'grommet';\n\nexport default function TableWidget({\n  id,\n  title,\n  columns,\n  data,\n  description,\n  ...props\n}) {\n  return (\n    <Card\n      background=\"white\"\n      pad=\"medium\"\n      gap=\"medium\"\n      elevation=\"none\"\n      border\n      {...props}\n    >\n      {title && (\n        <Heading level=\"4\" margin=\"none\">\n          {title}\n        </Heading>\n      )}\n\n      <Box gap=\"medium\">\n        <Table>\n          <TableHeader>\n            <TableRow>\n              {columns.map((column, index) => {\n                return (\n                  <TableCell key={`tw-column-${id}-${index}`} scope=\"col\">\n                    {column}\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {data?.map((cells, index) => {\n              return (\n                <TableRow key={`tw-row-${id}-${index}`} gap=\"xsmall\">\n                  {cells.map((cell, cIndex) => {\n                    return (\n                      <TableCell\n                        key={`tw-cell-${id}-${index}-${cIndex}`}\n                        scope=\"row\"\n                      >\n                        {cell}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </Box>\n\n      {description && (\n        <Paragraph margin=\"none\" color=\"dark-6\">\n          {description}\n        </Paragraph>\n      )}\n    </Card>\n  );\n}\n","filepath":"widgets/TableWidget.js","filename":"TableWidget.js","directory":"widgets","context":"Dashboard"},{"content":"import { useContext } from 'react';\nimport { ThemeContext } from 'grommet';\nexport default function useColor(color) {\n  const theme = useContext(ThemeContext);\n\n  if (color?.startsWith('#') && color?.length === 7) {\n    return color;\n  } else if (color?.startsWith('#') && color?.length === 4) {\n    return color[0] + color[0] + color[1] + color[1] + color[2] + color[2];\n  }\n\n  const currentMode = theme?.dark ? 'dark' : 'light';\n\n  if (typeof theme?.global?.colors?.[color] === 'string') {\n    return theme?.global?.colors?.[color];\n  } else if (typeof theme?.global?.colors?.[color] === 'object') {\n    return theme?.global?.colors?.[color]?.[currentMode];\n  }\n\n  return null;\n}\n","filepath":"widgets/hooks/useColor.js","filename":"useColor.js","directory":"widgets/hooks","context":"Dashboard"},{"content":"import { useContext } from 'react';\nimport { ThemeContext } from 'grommet';\nimport useColor from 'internal/hooks/useColor';\nexport default function useContrast(color) {\n  const theme = useContext(ThemeContext);\n  const { dark, light } = theme.global.colors.text;\n  const hexColor = useColor(color);\n  const r = parseInt(hexColor.substr(0, 2), 16);\n  const g = parseInt(hexColor.substr(2, 2), 16);\n  const b = parseInt(hexColor.substr(4, 2), 16);\n\n  const yiq = (r * 299 + g * 587 + b * 114) / 1000;\n\n  return yiq >= 128 ? light : dark;\n}\n","filepath":"widgets/hooks/useContrast.js","filename":"useContrast.js","directory":"widgets/hooks","context":"Dashboard"},{"content":"import useColor from 'internal/hooks/useColor';\nexport default function useDarken(color, amount = 10) {\n  const hexColor = useColor(color);\n  let [r, g, b] = hexColor.replace('#', '').match(/.{2}/g);\n\n  [r, g, b] = [\n    parseInt(r, 16) - amount,\n    parseInt(g, 16) - amount,\n    parseInt(b, 16) - amount,\n  ];\n\n  r = Math.max(Math.min(255, r), 0).toString(16);\n  g = Math.max(Math.min(255, g), 0).toString(16);\n  b = Math.max(Math.min(255, b), 0).toString(16);\n\n  const rr = (r.length < 2 ? '0' : '') + r;\n  const gg = (g.length < 2 ? '0' : '') + g;\n  const bb = (b.length < 2 ? '0' : '') + b;\n\n  return `#${rr}${gg}${bb}`;\n}\n","filepath":"widgets/hooks/useDarken.js","filename":"useDarken.js","directory":"widgets/hooks","context":"Dashboard"},{"content":"import useColor from 'internal/hooks/useColor';\nexport default function useLighten(color, amount = 10) {\n  const hexColor = useColor(color);\n  let [r, g, b] = hexColor.replace('#', '').match(/.{2}/g);\n\n  [r, g, b] = [\n    parseInt(r, 16) + amount,\n    parseInt(g, 16) + amount,\n    parseInt(b, 16) + amount,\n  ];\n\n  r = Math.max(Math.min(255, r), 0).toString(16);\n  g = Math.max(Math.min(255, g), 0).toString(16);\n  b = Math.max(Math.min(255, b), 0).toString(16);\n\n  const rr = (r.length < 2 ? '0' : '') + r;\n  const gg = (g.length < 2 ? '0' : '') + g;\n  const bb = (b.length < 2 ? '0' : '') + b;\n\n  return `#${rr}${gg}${bb}`;\n}\n","filepath":"widgets/hooks/useLighten.js","filename":"useLighten.js","directory":"widgets/hooks","context":"Dashboard"}]}
