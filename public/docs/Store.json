{"files":[{"content":"import React from 'react';\nimport {\n  Box,\n  Button,\n  Card,\n  CheckBoxGroup,\n  Form,\n  FormField,\n  Grid,\n  Heading,\n  InfiniteScroll,\n  Image,\n  RadioButtonGroup,\n  Stack,\n  Text,\n} from 'grommet';\nimport { FormClose, Star } from 'grommet-icons';\nimport accounting from 'accounting';\nimport { titleize } from 'inflection';\n\nimport useStore from './useStore';\n\nfunction StoreProductRating({ total = 5, selected = 0 }) {\n  const stars = Array(total).fill(Star);\n\n  return (\n    <Box direction=\"row\">\n      {stars.map((Star, index) => {\n        if (index < selected) {\n          return <Star key={`rating-star-${index}`} color=\"#FFC95E\" />;\n        }\n\n        return <Star key={`rating-star-${index}`} />;\n      })}\n    </Box>\n  );\n}\n\nfunction StoreProducts({ products, addProductToCart }) {\n  return (\n    <Grid columns=\"medium\" gap=\"medium\" pad={{ vertical: 'medium' }}>\n      <InfiniteScroll step={10} items={products}>\n        {(product) => {\n          return (\n            <StoreProduct\n              key={product.id}\n              addProductToCart={addProductToCart}\n              {...product}\n            />\n          );\n        }}\n      </InfiniteScroll>\n    </Grid>\n  );\n}\n\nfunction StoreProduct({\n  id,\n  price,\n  image,\n  title,\n  description,\n  addProductToCart,\n  ...props\n}) {\n  return (\n    <Card background=\"white\" elevation=\"none\" border {...props}>\n      <Stack anchor=\"top-right\" fit>\n        <Image fit=\"cover\" src={image} fill />\n        <Box\n          background=\"brand\"\n          pad={{ vertical: 'xsmall', horizontal: 'small' }}\n          margin={{ vertical: 'small' }}\n        >\n          <Text>{accounting.formatMoney(price)}</Text>\n        </Box>\n      </Stack>\n      <Box pad=\"small\" gap=\"small\">\n        <Heading level={4} margin=\"none\">\n          {title}\n        </Heading>\n\n        <Text truncate>{description}</Text>\n        <Button\n          label=\"Add to Cart\"\n          onClick={() =>\n            addProductToCart({ id, price, image, title, description })\n          }\n          primary\n        />\n      </Box>\n    </Card>\n  );\n}\n\nfunction StoreSidebar({ categories, brands, updateFilters, filters }) {\n  return (\n    <Form onChange={updateFilters} value={filters}>\n      <Box gap=\"medium\">\n        <Card\n          flex={false}\n          elevation=\"none\"\n          background=\"white\"\n          pad=\"medium\"\n          gap=\"medium\"\n        >\n          <Heading level={5} margin=\"none\">\n            Price\n          </Heading>\n\n          <FormField>\n            <RadioButtonGroup\n              name=\"price\"\n              options={[\n                {\n                  id: 'price-1',\n                  label: 'Under $25',\n                  value: '0.00-24.99',\n                },\n                {\n                  id: 'price-2',\n                  label: '$25 - $100',\n                  value: '25.00-99.99',\n                },\n                {\n                  id: 'price-3',\n                  label: '$100 - $500',\n                  value: '100.00-499.99',\n                },\n                {\n                  id: 'price-4',\n                  label: 'Over $500',\n                  value: '500.00-99999999999.99',\n                },\n                {\n                  id: 'price-5',\n                  label: 'Any',\n                  value: '0.00-99999999999.99',\n                },\n              ]}\n            />\n          </FormField>\n        </Card>\n        <Card\n          flex={false}\n          elevation=\"none\"\n          background=\"white\"\n          pad=\"medium\"\n          gap=\"medium\"\n        >\n          <Heading level={5} margin=\"none\">\n            Category\n          </Heading>\n          <FormField>\n            <CheckBoxGroup\n              name=\"category\"\n              options={categories.map((category, index) => ({\n                id: category.id,\n                label: titleize(category.name),\n                value: category.id,\n              }))}\n            />\n          </FormField>\n        </Card>\n        <Card\n          flex={false}\n          elevation=\"none\"\n          background=\"white\"\n          pad=\"medium\"\n          gap=\"medium\"\n        >\n          <Heading level={5} margin=\"none\">\n            Brand\n          </Heading>\n          <FormField>\n            <CheckBoxGroup\n              name=\"brand\"\n              options={brands.map((brand) => ({\n                id: brand.id,\n                label: titleize(brand.name),\n                value: brand.id,\n              }))}\n            />\n          </FormField>\n        </Card>\n        <Card\n          flex={false}\n          elevation=\"none\"\n          background=\"white\"\n          pad=\"medium\"\n          gap=\"medium\"\n        >\n          <Heading level={5} margin=\"none\">\n            Rating\n          </Heading>\n          <FormField>\n            <RadioButtonGroup\n              name=\"rating\"\n              options={[\n                {\n                  id: 'rating-5',\n                  label: <StoreProductRating selected={5} />,\n                  value: 5,\n                },\n                {\n                  id: 'rating-4',\n                  label: <StoreProductRating selected={4} />,\n                  value: 4,\n                },\n                {\n                  id: 'rating-3',\n                  label: <StoreProductRating selected={3} />,\n                  value: 3,\n                },\n                {\n                  id: 'rating-2',\n                  label: <StoreProductRating selected={2} />,\n                  value: 2,\n                },\n                {\n                  id: 'rating-1',\n                  label: <StoreProductRating selected={1} />,\n                  value: 1,\n                },\n                {\n                  id: 'rating-any',\n                  label: 'Any',\n                  value: '',\n                },\n              ]}\n            />\n          </FormField>\n        </Card>\n      </Box>\n    </Form>\n  );\n}\n\nfunction StoreNotification({ id, icon, message, expiration, onDismiss }) {\n  const Icon = icon;\n\n  return (\n    <Box\n      direction=\"row\"\n      align=\"center\"\n      justify=\"between\"\n      gap=\"small\"\n      round=\"medium\"\n      elevation=\"medium\"\n      height={{ min: 'xxsmall' }}\n      pad={{ vertical: 'xsmall', horizontal: 'small' }}\n      animation=\"fadeIn\"\n      background=\"brand\"\n    >\n      <Box align=\"center\" direction=\"row\" gap=\"small\">\n        <Icon />\n        <Text>{message}</Text>\n      </Box>\n      <Button icon={<FormClose />} onClick={() => onDismiss(id)} plain />\n    </Box>\n  );\n}\n\nfunction StoreNotifications({ notifications, onDismiss, ...props }) {\n  return (\n    <Box\n      align=\"center\"\n      justify=\"start\"\n      gap=\"small\"\n      style={{ position: 'sticky', bottom: '98%' }}\n      {...props}\n    >\n      {notifications?.map?.((notification) => {\n        return (\n          <StoreNotification\n            key={notification?.id}\n            onDismiss={onDismiss}\n            {...notification}\n          />\n        );\n      })}\n    </Box>\n  );\n}\n\nexport default function Store() {\n  const {\n    filteredProducts,\n    categories,\n    brands,\n    updateFilters,\n    filters,\n    addProductToCart,\n    notifications,\n    dismissNotification,\n  } = useStore();\n\n  return (\n    <Box>\n      <Grid\n        className=\"Store\"\n        columns={['1/4', '3/4']}\n        rows={['auto']}\n        areas={[['StoreSidebar', 'StoreListing']]}\n        fill\n      >\n        <Box gridArea=\"StoreSidebar\">\n          <StoreSidebar\n            categories={categories}\n            brands={brands}\n            filters={filters}\n            updateFilters={updateFilters}\n          />\n        </Box>\n\n        <Box\n          gridArea=\"StoreListing\"\n          pad={{ horizontal: 'medium' }}\n          style={{ position: 'relative', transform: 'scale(1)' }}\n        >\n          <StoreProducts\n            products={filteredProducts}\n            addProductToCart={addProductToCart}\n          />\n\n          <StoreNotifications\n            notifications={notifications}\n            onDismiss={dismissNotification}\n          />\n        </Box>\n      </Grid>\n    </Box>\n  );\n}\n","filepath":"Store.js","filename":"Store.js","directory":".","app":"Store"},{"content":"export { default } from './Store';\n","filepath":"index.js","filename":"index.js","directory":".","app":"Store"},{"content":"import { useMemo, useState } from 'react';\nimport { inRange } from 'lodash';\nimport { StatusGood } from 'grommet-icons';\nimport * as config from './config';\n\nexport default function useStore() {\n  const [cart, setCart] = useState(config?.cart);\n  const [notifications, setNotifications] = useState(config?.notifications);\n  const [products] = useState(config?.products);\n  const [categories] = useState(config?.categories);\n  const [brands] = useState(config?.brands);\n  const [filters, setFilters] = useState({\n    price: '0.00-99999999999.99',\n    category: '',\n    brand: '',\n    rating: '',\n  });\n\n  const filteredProducts = useMemo(() => {\n    let filteredProducts = products;\n\n    if (filters?.price) {\n      filteredProducts = filteredProducts.filter((product) => {\n        const [min, max] = filters?.price?.split('-');\n        return inRange(product.price, parseFloat(min), parseFloat(max));\n      });\n    }\n\n    if (filters?.category) {\n      filteredProducts = filteredProducts.filter((product) => {\n        return filters?.category?.includes(product.categoryId);\n      });\n    }\n\n    if (filters?.brand) {\n      filteredProducts = filteredProducts.filter((product) => {\n        return filters?.brand?.includes(product.brandId);\n      });\n    }\n\n    if (filters?.rating) {\n      filteredProducts = filteredProducts.filter((product) => {\n        return filters?.rating === Math.round(product.rating);\n      });\n    }\n\n    return filteredProducts;\n  }, [products, filters]);\n\n  return useMemo(() => {\n    function updateFilters(updates) {\n      setFilters(updates);\n    }\n    function addProductToCart(product) {\n      const notification = {\n        id: `notification-${cart?.length}-${product?.id}`,\n        icon: StatusGood,\n        message: `${product?.title} was added to your cart`,\n        expiration: Date.now() + 5000,\n      };\n\n      setCart([...cart, { ...product }]);\n      notifyUser(notification);\n    }\n    function notifyUser({ id, icon, message, expiration }) {\n      setNotifications([...notifications, { id, icon, message, expiration }]);\n    }\n    function dismissNotification(notificationId) {\n      setNotifications(\n        notifications?.filter(\n          (notification) => notification?.id !== notificationId\n        )\n      );\n    }\n    return {\n      products,\n      cart,\n      categories,\n      brands,\n      filters,\n      updateFilters,\n      filteredProducts,\n      addProductToCart,\n      notifications,\n      notifyUser,\n      dismissNotification,\n    };\n  }, [\n    cart,\n    products,\n    categories,\n    brands,\n    filters,\n    filteredProducts,\n    notifications,\n  ]);\n}\n","filepath":"useStore.js","filename":"useStore.js","directory":".","app":"Store"},{"content":"const { PUBLIC_URL } = process.env;\n\nexport const products = [\n  {\n    id: 'store-product-1',\n    title: 'Coffee',\n    description:\n      'Reprehenderit in sint eiusmod esse Lorem laboris cillum nostrud ut quis ipsum non duis magna. Ea sit non id qui minim do nisi tempor ad. Proident ipsum aliqua nisi magna reprehenderit deserunt exercitation veniam laborum ad est aliquip amet. Culpa ullamco id esse culpa exercitation. Velit amet aliqua cillum tempor dolor laborum laborum. Tempor do officia ex enim anim. Labore do qui est occaecat fugiat et anim id laboris.',\n    image: `${PUBLIC_URL}/placeholder/img/food/coffee-1200xauto.jpg`,\n    price: 10.99,\n    rating: 5.0,\n    categoryId: 'store-category-3',\n    brandId: 'store-brand-4',\n  },\n  {\n    id: 'store-product-2',\n    title: 'Honey',\n    description:\n      'Reprehenderit in sint eiusmod esse Lorem laboris cillum nostrud ut quis ipsum non duis magna. Ea sit non id qui minim do nisi tempor ad. Proident ipsum aliqua nisi magna reprehenderit deserunt exercitation veniam laborum ad est aliquip amet. Culpa ullamco id esse culpa exercitation. Velit amet aliqua cillum tempor dolor laborum laborum. Tempor do officia ex enim anim. Labore do qui est occaecat fugiat et anim id laboris.',\n    image: `${PUBLIC_URL}/placeholder/img/food/honey-1200xauto.jpg`,\n    price: 200.99,\n    rating: 4.1,\n    categoryId: 'store-category-4',\n    brandId: 'store-brand-2',\n  },\n  {\n    id: 'store-product-3',\n    title: 'Onions',\n    description:\n      'Reprehenderit in sint eiusmod esse Lorem laboris cillum nostrud ut quis ipsum non duis magna. Ea sit non id qui minim do nisi tempor ad. Proident ipsum aliqua nisi magna reprehenderit deserunt exercitation veniam laborum ad est aliquip amet. Culpa ullamco id esse culpa exercitation. Velit amet aliqua cillum tempor dolor laborum laborum. Tempor do officia ex enim anim. Labore do qui est occaecat fugiat et anim id laboris.',\n    image: `${PUBLIC_URL}/placeholder/img/food/onion-1200xauto.jpg`,\n    price: 50.99,\n    rating: 3.2,\n    categoryId: 'store-category-2',\n    brandId: 'store-brand-1',\n  },\n  {\n    id: 'store-product-4',\n    title: 'Strawberries',\n    description:\n      'Reprehenderit in sint eiusmod esse Lorem laboris cillum nostrud ut quis ipsum non duis magna. Ea sit non id qui minim do nisi tempor ad. Proident ipsum aliqua nisi magna reprehenderit deserunt exercitation veniam laborum ad est aliquip amet. Culpa ullamco id esse culpa exercitation. Velit amet aliqua cillum tempor dolor laborum laborum. Tempor do officia ex enim anim. Labore do qui est occaecat fugiat et anim id laboris.',\n    image: `${PUBLIC_URL}/placeholder/img/food/strawberry-1200xauto.jpg`,\n    price: 399.99,\n    rating: 2.3,\n    categoryId: 'store-category-1',\n    brandId: 'store-brand-3',\n  },\n  {\n    id: 'store-product-5',\n    title: 'Tea',\n    description:\n      'Reprehenderit in sint eiusmod esse Lorem laboris cillum nostrud ut quis ipsum non duis magna. Ea sit non id qui minim do nisi tempor ad. Proident ipsum aliqua nisi magna reprehenderit deserunt exercitation veniam laborum ad est aliquip amet. Culpa ullamco id esse culpa exercitation. Velit amet aliqua cillum tempor dolor laborum laborum. Tempor do officia ex enim anim. Labore do qui est occaecat fugiat et anim id laboris.',\n    image: `${PUBLIC_URL}/placeholder/img/food/tea-1200xauto.jpg`,\n    price: 6000.99,\n    rating: 1.4,\n    categoryId: 'store-category-3',\n    brandId: 'store-brand-4',\n  },\n  {\n    id: 'store-product-6',\n    title: 'Raspberries',\n    description:\n      'Reprehenderit in sint eiusmod esse Lorem laboris cillum nostrud ut quis ipsum non duis magna. Ea sit non id qui minim do nisi tempor ad. Proident ipsum aliqua nisi magna reprehenderit deserunt exercitation veniam laborum ad est aliquip amet. Culpa ullamco id esse culpa exercitation. Velit amet aliqua cillum tempor dolor laborum laborum. Tempor do officia ex enim anim. Labore do qui est occaecat fugiat et anim id laboris.',\n    image: `${PUBLIC_URL}/placeholder/img/food/raspberry-1200xauto.jpg`,\n    price: 6000.99,\n    rating: 4.8,\n    categoryId: 'store-category-1',\n    brandId: 'store-brand-2',\n  },\n];\n\nexport const categories = [\n  {\n    id: 'store-category-1',\n    name: 'fruits',\n  },\n  {\n    id: 'store-category-2',\n    name: 'vegetables',\n  },\n  {\n    id: 'store-category-3',\n    name: 'beverages',\n  },\n  {\n    id: 'store-category-4',\n    name: 'organic',\n  },\n  {\n    id: 'store-category-5',\n    name: 'breads',\n  },\n];\n\nexport const brands = [\n  {\n    id: 'store-brand-1',\n    name: 'Some Food Company',\n  },\n  {\n    id: 'store-brand-2',\n    name: 'Another Food Company',\n  },\n  {\n    id: 'store-brand-3',\n    name: 'That Food Company',\n  },\n  {\n    id: 'store-brand-4',\n    name: 'New Food Company',\n  },\n];\n\nexport const cart = [\n  {\n    id: 'store-cart-product-1',\n    title: 'Coffee',\n    description:\n      'Reprehenderit in sint eiusmod esse Lorem laboris cillum nostrud ut quis ipsum non duis magna. Ea sit non id qui minim do nisi tempor ad. Proident ipsum aliqua nisi magna reprehenderit deserunt exercitation veniam laborum ad est aliquip amet. Culpa ullamco id esse culpa exercitation. Velit amet aliqua cillum tempor dolor laborum laborum. Tempor do officia ex enim anim. Labore do qui est occaecat fugiat et anim id laboris.',\n    image: `${PUBLIC_URL}/placeholder/img/food/coffee-1200xauto.jpg`,\n    price: 10.99,\n    rating: 5.0,\n    categoryId: 'store-category-3',\n    brandId: 'store-brand-4',\n  },\n  {\n    id: 'store-cart-product-2',\n    title: 'Honey',\n    description:\n      'Reprehenderit in sint eiusmod esse Lorem laboris cillum nostrud ut quis ipsum non duis magna. Ea sit non id qui minim do nisi tempor ad. Proident ipsum aliqua nisi magna reprehenderit deserunt exercitation veniam laborum ad est aliquip amet. Culpa ullamco id esse culpa exercitation. Velit amet aliqua cillum tempor dolor laborum laborum. Tempor do officia ex enim anim. Labore do qui est occaecat fugiat et anim id laboris.',\n    image: `${PUBLIC_URL}/placeholder/img/food/honey-1200xauto.jpg`,\n    price: 200.99,\n    rating: 4.1,\n    categoryId: 'store-category-4',\n    brandId: 'store-brand-2',\n  },\n];\n\nexport const notifications = [];\n","filepath":"config/config.js","filename":"config.js","directory":"config","app":"Store"},{"content":"export * from './config';\n","filepath":"config/index.js","filename":"index.js","directory":"config","app":"Store"},{"content":"const { PUBLIC_URL } = process.env;\n\nexport const user1 = {\n  id: 'user-1',\n  username: 'johnd',\n  firstName: 'John',\n  lastName: 'D',\n  profile: `${PUBLIC_URL}/placeholder/img/avatars/guy1.jpg`,\n  company: 'That Company Inc.',\n\n  email: 'johnd@example.com',\n  mobile: '(555) 555-1234',\n  home: '(555) 555-5678',\n  work: '(555) 555-1000',\n};\n\nexport const user2 = {\n  id: 'user-2',\n  username: 'janed',\n  firstName: 'Jane',\n  lastName: 'D',\n  profile: `${PUBLIC_URL}/placeholder/img/avatars/girl1.jpg`,\n  company: 'Some Company Inc.',\n\n  email: 'janed@example.com',\n  mobile: '(555) 555-1234',\n  home: '(555) 555-5678',\n  work: '(555) 555-1000',\n};\n\nexport const user3 = {\n  id: 'user-3',\n  username: 'bills',\n  firstName: 'Bill',\n  lastName: 'S',\n  profile: `${PUBLIC_URL}/placeholder/img/avatars/guy2.jpg`,\n  company: 'Another Company Inc.',\n\n  email: 'bills@example.com',\n  mobile: '(555) 555-1234',\n  home: '(555) 555-5678',\n  work: '(555) 555-1000',\n};\n\nexport const user4 = {\n  id: 'user-4',\n  username: 'suzyq',\n  firstName: 'Suzy',\n  lastName: 'Q',\n  profile: `${PUBLIC_URL}/placeholder/img/avatars/girl2.jpg`,\n  company: 'Not A Company Inc.',\n\n  email: 'suzyq@example.com',\n  mobile: '(555) 555-1234',\n  home: '(555) 555-5678',\n  work: '(555) 555-1000',\n};\n\nexport const user5 = {\n  id: 'user-5',\n  username: 'mikes',\n  firstName: 'Mike',\n  lastName: 'S',\n  profile: `${PUBLIC_URL}/placeholder/img/avatars/guy3.jpg`,\n  company: 'Same Company Inc.',\n\n  email: 'mikes@example.com',\n  mobile: '(555) 555-1234',\n  home: '(555) 555-5678',\n  work: '(555) 555-1000',\n};\n\nexport const user6 = {\n  id: 'user-6',\n  username: 'saraht',\n  firstName: 'Sarah',\n  lastName: 'T',\n  profile: `${PUBLIC_URL}/placeholder/img/avatars/girl3.jpg`,\n  company: 'Should Be A Company Inc.',\n\n  email: 'saraht@example.com',\n  mobile: '(555) 555-1234',\n  home: '(555) 555-5678',\n  work: '(555) 555-1000',\n};\n\nexport const user7 = {\n  id: 'user-7',\n  username: 'markw',\n  firstName: 'Mark',\n  lastName: 'W',\n  profile: `${PUBLIC_URL}/placeholder/img/avatars/guy4.jpg`,\n  company: 'Was A Company Inc.',\n\n  email: 'markw@example.com',\n  mobile: '(555) 555-1234',\n  home: '(555) 555-5678',\n  work: '(555) 555-1000',\n};\n","filepath":"config/users.js","filename":"users.js","directory":"config","app":"Store"}]}
